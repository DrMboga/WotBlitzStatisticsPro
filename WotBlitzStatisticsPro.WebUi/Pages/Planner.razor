@page "/planner"
@inherits PlannerBase;

@if(Localize != null && Mediator != null)
{

@if (!IsPlayerLoggedIn)
{
<div class="d-flex justify-content-evenly">
    <button type="button" class="btn btn-warning mt-3"
        @onclick="@(async (e) => { await Mediator.Publish(new RedirectToLoginPlayerNotification()); })">
        <img src="icons/wg-200.png" width="32px" height="32px"> @Localize["Login with WG.net ID"]</button>
</div>
} else 
{
<nav class="navbar navbar-expand-lg navbar-dark bg-secondary">
    <div class="container-fluid d-flex align-items-center">
        <div class="navbar-nav me-auto mb-2 mb-lg-0 d-flex">
            <div class="me-3">
                <b>@PlayerInfo?.Nickname</b>
            </div>
            <div class="me-2">
                <img src="icons/profile.private.gold.scale-200.png" width="32px" height="32px">
                @PlayerInfo?.Gold.ToString("N0")
            </div>
            <div class="me-2">
                <img src="icons/profile.private.silver.scale-200.png" width="32px" height="32px">
                @Credits()
            </div>
            <div>
                <img src="icons/profile.private.xp.scale-200.png" width="32px" height="32px">
                @FreeXp()
            </div>
        </div>
        <button type="button" class="btn btn-primary"
        @onclick="@(async (e) => { await Logout(); })">
        <img src="icons/navigation.exit.scale-200.png" width="32px" height="32px"></button>
    </div>
</nav>
<div class="d-flex justify-content-evenly">
    <button type="button" class="btn btn-warning mt-3"
        @onclick="@(async (e) => { await AddNewTank(); })">
        @Localize["Add new tank"]</button>
</div>
@if(ResourcePlans != null)
{
    <div class="d-flex flex-column">
@foreach (var planRow in ResourcePlans)
{
    <div>
        @planRow.TankId
    </div>
}
    </div>
}
}

}

<TanksPlannerDialog @ref="TanksPlannerDialog"></TanksPlannerDialog>