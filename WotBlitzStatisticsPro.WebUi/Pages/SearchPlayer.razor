@inject IStringLocalizer<App> Localize
<div class="d-flex flex-column mt-4">
  <div class="input-group">
    <span class="input-group-text" id="search-area"><img src="/icons/tankists-200.png" width="32px" height="32px"></span>
    <input type="text" class="form-control" placeholder="@Localize["Find player"]" aria-label="FindPlayer" aria-describedby="search-area"
      value="@InputValue" @onchange="@(async (ChangeEventArgs __e) => await OnSearchTextrChanged(__e?.Value?.ToString()))" >
  </div>
  <ul class="list-group flex-fill mt-4">
    @foreach (var player in players)
    {
      <li class="list-group-item @(SelectedPlayer == player ? "active" : string.Empty)"
          @onclick="@(async (e) => await OnPlayerSelected(player))">
        <div class="d-flex flex-row align-items-center">
          <div class="flex-fill">@player</div>
          @if(SelectedPlayer == player)
          {
          <button type="button" class="btn btn-secondary" 
            @onclick="@(async (e) => await OnPlayerInfoClicked(player))"><img src="/icons/tankist-200.png" width="24px" height="24px"></button>
          }
        </div>
      </li>
    }
  </ul>
</div>

@code {
    private string? InputValue { get; set; }

    // TODO: Replace with searcPlayerResponseItem DTO
    private List<String> players { get; set; } = new List<string>();

    private string? SelectedPlayer { get; set; }

    private async Task OnSearchTextrChanged(string? newValue)
    {
      if(!string.IsNullOrEmpty(newValue))
      {
        // TODO: Send mediatR request for search player
        players.Add(newValue);
      }
    }

    private async Task OnPlayerSelected(string player)
    {
      SelectedPlayer = player;
    }

    private async Task OnPlayerInfoClicked(string player)
    {
      // TODO: Send mediatR notification to navigate to player statistics
      Console.WriteLine($"Selected '{player}' statistics");
    }
}